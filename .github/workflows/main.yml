name: Deploy to AWS

on:
  push:
    branches:
      - main
jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-skip-session-tagging: true

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.4

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: Terraform/repository

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: Terraform/repository

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
        working-directory: Terraform/repository
        
      - name: Terraform Apply
        run: terraform apply --auto-approve=true
        working-directory: Terraform/repository
        
  deploy:
    runs-on: ubuntu-latest
    needs: terraform  

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and push Docker images to ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: aba_repository
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker compose -f Docker-compose.yml build --progress=plain
          docker tag chat-app_chat-frontend:latest $REGISTRY/$REPOSITORY:frontend-$IMAGE_TAG
          docker tag chat-app_auth-backend:latest $REGISTRY/$REPOSITORY:auth-backend-$IMAGE_TAG
          docker tag chat-app_ws-backend:latest $REGISTRY/$REPOSITORY:ws-backend-$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:frontend-$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:auth-backend-$IMAGE_TAG
          docker push $REGISTRY/$REPOSITORY:ws-backend-$IMAGE_TAG
